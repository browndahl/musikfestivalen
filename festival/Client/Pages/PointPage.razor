@using festival.Client.Services
@using festival.Shared.Models
@using System.Net.Http.Json;
@inject HttpClient Http
@using System.Runtime.ConstrainedExecution;
@using System.Net.Http;
@using Npgsql;
@using Dapper;
@page "/point"


<PageTitle>Point-oversigt</PageTitle>

<h1>Velkommen til point-oversigt</h1>
<br />

Top 10 modtager gratis VIP armbånd inkl. backstage for næste år
<br />
Top 20 modtager gratis VIP armbånd for næste år
<br />
Top 30 modtager gratis Allday-armbånd for næste år

<!---Styling af vores tabel-->
<style>
    .highlight-row-1st {
        background-color: goldenrod;
    }

    .highlight-row-2nd {
        background-color: lightgreen;
    }

    .highlight-row-nullPoints {
        background-color: red
    }
</style>

@if (gets == null)
{
    <p><em>Loading...</em></p>
    }
    else //Oprettelse af table
    {
        //Finder max-value af samleantalpoint (vagt) i vores liste
        var maxPoints = gets.Max(f => f.Samletantalpoint);

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Frivillig ID</th>
                <th>Navn</th>
                <th>Samlet antal point</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var get in gets)
            {
                <tr class="@(get.Samletantalpoint == maxPoints ? "highlight-row-1st" : get.Samletantalpoint == null ? "highlight-row-nullPoints" : "")">
                    <td>@get.Frivilligid</td>
                    <td>@get.Fornavn @get.Efternavn</td>
                    <td>@get.Samletantalpoint </td>
                </tr>

            }
        </tbody>
    </table>
}

@code {
    [Inject]
    public IFrivilligeService FrivilligeService { get; set; }
    public List<Frivillige> gets = new List<Frivillige>();
    protected override async Task OnInitializedAsync()
    {
        gets = (await FrivilligeService.GetAllFrivillige())
            .OrderByDescending(f => f.Samletantalpoint)
            .ToList();
    }
}