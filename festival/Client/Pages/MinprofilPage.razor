@using festival.Client.Services
@using festival.Shared.Models
@using System.Net.Http.Json;
@inject HttpClient Http
@using System.Runtime.ConstrainedExecution;
@using System.Net.Http;
@using Npgsql;
@using Dapper;
@inject HttpClient Http

@page "/minprofil"

<PageTitle>Min profil</PageTitle>

<h1>Her kan du se status på din profil</h1>


<EditForm EditContext="@EditContext"
          OnValidSubmit="@HandleValidSubmit"
          OnInvalidSubmit="@HandleInvalidSubmit"
          class="row p-3">



    <div class="col-12 mb-3">
        <div class="form-check">
            <label for="vagter">Vælg Person</label>

            <InputSelect id="Navn" @bind-Value=@frivilligid class="form-control">


                @foreach (var get in gets)
                {
                    <option value=@get.Frivilligid>  @get.Fornavn @get.Efternavn </option>
                    <option value=@get.Frivilligid> </option>

                }
            </InputSelect>


        </div>
    </div>


      Valgt frivillig: @frivilligid
      adresse: @adresse
    @{
        // ValgtFrivillig.Fornavn
        foreach(var frivillig in gets)
        {
            if (frivillig.Frivilligid == frivilligid)
            {
                ValgtFrivillig = frivillig;
            }
           

       }
     
    }


    






</EditForm>




@code {


    [Inject]
    public IFrivilligeService frivilligeService { get; set; }
    private int ErrorCode { get; set; } = 0;

    //Vores default værdi til vores forms

    public string fornavn = "Navn";
    public string efternavn = "Navn";
    public int frivilligid = 0;
    public string adresse = "Adresse";

    public string arbejdsplads = "";

    public Frivillige ValgtFrivillig = new Frivillige();


    //Booking bliver tilføjet til vores database
    private async Task selectid()
    {
        Frivillige item = new Frivillige(frivilligid, fornavn);
        ErrorCode = await frivilligeService.AddItem(item);
        frivilligid++;
        Console.WriteLine("Shopping item added: return code: " + ErrorCode);
    }


    //Henter vores shelter-data fra mongo(database)
    [Inject]
    public IFrivilligeService FrivilligeService { get; set; }

    public List<Frivillige> gets = new List<Frivillige>();

    protected override async Task OnInitializedAsync()
    {
        gets = (await frivilligeService.GetAllFrivillige()).ToList();
        foreach (Frivillige f in gets)
        {
            Console.WriteLine($"{f.Frivilligid} {f.Fornavn} ");
        }
        ValgtFrivillig = gets[0];





    }


}