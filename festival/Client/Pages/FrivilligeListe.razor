@using festival.Client.Services
@using festival.Shared.Models
@using System.Net.Http.Json;
@inject HttpClient Http
@using System.Runtime.ConstrainedExecution;
@using System.Net.Http;
@using Npgsql;
@using Dapper;


@page "/frivilligeliste"


<PageTitle>Frivillige liste</PageTitle>

<h1>Listen over frivillige</h1>

<p>Her man koordinatorerne se listen over frivillige</p>

@if (gets == null)
{
    <p><em>Loading...</em></p>
}
else //Oprettelse af table
     //Husk altid at "REBUILD", efter du har oprettet tabel, ellers kommer det ikke frem på WEB.
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>frivilligid</th>
                <th>fornavn</th>
                <th>efternavn</th>
                <th>alder</th>
                <th>email</th>
                <th>tlf</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var get in gets) //var get in gets -- tidligere123
            {

                <tr>
                    <td>@get.Frivilligid</td>
                    <td>@get.Fornavn</td>
                    <td>@get.Efternavn</td>
                    <td>@get.Alder</td>
                    <td>@get.Email</td>
                    <td>@get.Tlf</td>



                </tr>
            }
        </tbody>
    </table>

    <div class="col-sm-12">
        <button class="btn btn-primary" @onclick="DeleteFrivilligItemHandler">Delete frivillig</button>
        <button class="btn btn-primary" @onclick="UpdateFrivilligItemHandler">Edit frivillig</button>
    </div>
}


@code {

    [Inject]
    public IFrivilligeService FrivilligeService { get; set; }
    public List<Frivillige> gets = new List<Frivillige>();
    protected override async Task OnInitializedAsync()
    {
        gets = (await FrivilligeService.GetAllFrivillige()).ToList();
        gets = gets.OrderBy(x => x.Frivilligid).ToList();

    }

    //Sletter en af vores frivillige
    private async void DeleteFrivilligItemHandler()
    {
        /*
        Frivillige id = new Frivillige (frivilligid);
        ErrorCode = await FrivilligeService.DeleteItem(id);
        Console.WriteLine(ErrorCode);
        */

    }



    //Opdaterer en af vores frivillige
    private async void UpdateFrivilligItemHandler()
    {
        /*
        Frivillige id = new Frivillige (frivilligid);
        ErrorCode = await FrivilligeService.DeleteItem(id);
        Console.WriteLine(ErrorCode);
        */

    }


}