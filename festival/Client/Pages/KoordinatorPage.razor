@using festival.Client.Services
@using festival.Shared.Models
@using System.Net.Http.Json;
@inject HttpClient Http
@using System.Runtime.ConstrainedExecution;
@using System.Net.Http;
@using Npgsql;
@using Dapper;
@using System.Net;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Text;
@using System.Threading.Tasks;
@using Npgsql;
@using Dapper;

@page "/koordinator"

<PageTitle>Koordinator - Tilføjelse af vagter</PageTitle>

<h1>Nedeunder kan du som koordinator oprette vagter</h1>


<EditForm EditContext="@EditContext"
          OnValidSubmit="@HandleValidSubmit"
          OnInvalidSubmit="@HandleInvalidSubmit"
          class="row p-3">
    <!---Vagtid-->
    <div class="col-md-6 mb-3">
        <label for="Vagtid">Vagtid</label>
        <InputNumber id="Vagtid" @bind-Value="Vagtid" class="form-control"
                     ParsingErrorMessage=" The {0} field has an invalid value."
                     DisplayName="Vagtid" />
        <ValidationMessage For="@(() => Vagtid)" />
    </div>

    <button class="btn btn-primary" @onclick="AddVagtItemHandler">Opret vagt</button>
    <h2>Booking: return code: @ErrorCode</h2>

</EditForm>



@code {
    [Inject]
    public IVagtService VagtService { get; set; }
    private int ErrorCode { get; set; }

    //Vores default værdi til vores forms
    public int Vagtid = 0;

    //Tilføjer vores nye indtastet data til vagtapi
    private async void AddVagtItemHandler()
    {
        Vagt item = new Vagt(Vagtid);
        ErrorCode = await VagtService.AddItem(item);
        Console.WriteLine(ErrorCode);
    }




}